/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form;

import DAO.CustomerDAO;
import DAO.OderDAO;
import DAO.OrderDetailDAO;
import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.Customers;
import model.Order;
import model.Orderdetail;
import model.Products;

/**
 *
 * @author ASUS
 */
public class HoaDon extends javax.swing.JDialog {

    private List<Products> selectedProductNames;
    List<Products> productsList = new ArrayList<>();
    List<Order> listOder = new ArrayList<>();
    OderDAO oderDAO = new OderDAO();
    CustomerDAO customerDAO = new CustomerDAO();
    OrderDetailDAO orderDetailDAO = new OrderDetailDAO();
    Customer customerForm = new Customer();
    

    /**
     * Creates new form HoaDon
     */
    public HoaDon(Frame parent, boolean modal, List<Products> selectedProductNames, List<Products> productsList) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.productsList = productsList;
        this.selectedProductNames = selectedProductNames;
        
        Tongtien();
    }

    private void Tongtien() {

        System.out.println("" + productsList);
        if (productsList != null && !productsList.isEmpty()) {
            float totalPayment = 0.0f;

            for (Products product : productsList) {
                System.out.println("" + productsList);
                int total = product.getTotalPay();
                System.out.println("" + product.getTotalPay());
                float totalPrice = product.getPrice() * total;
                totalPayment += totalPrice;
            }
            Date date = new Date();
            customerForm.setVisible(true);
            int selectedCustomerID = customerForm.getSelectedCustomerID();
            System.out.println(selectedCustomerID);
            lblsumMoney.setText(String.valueOf(totalPayment) + "VND");

        } else {
            System.out.println("Danh sách sản phẩm không có giá trị.");

        }
    }

   public Order insertOder() {
       Order order = null;
    if (lblCash.getForeground().equals(Color.red) || lblQr.getForeground().equals(Color.red)) {
        // Xử lý khi đã chọn phương thức thanh toán
        System.out.println("" + productsList);
        if (productsList != null && !productsList.isEmpty()) {
            float totalPayment = 0.0f;

            for (Products product : productsList) {
                int total = product.getTotalPay();
                System.out.println("" + product.getTotalPay());
                float totalPrice = product.getPrice() * total;
                totalPayment += totalPrice;
            }

            Date date = new Date();
            int selectedCustomerID = customerForm.getSelectedCustomerID();
            System.out.println(selectedCustomerID);

            if (selectedCustomerID == 0) {
                List<Customers> customersList = customerDAO.selectAll();
                if (!customersList.isEmpty()) {
                    Customers customer = customersList.get(customersList.size() - 1);
                    int customerID = customer.getCustomersID();
                    System.out.println("customid" + customerID);
               Order     oder = new Order(customerID, totalPayment, date, true);
               oderDAO.insert(oder);
                } else {
                    System.out.println("Danh sách khách hàng rỗng.");
                }
            } else {
                 Order  oder = new Order(selectedCustomerID, totalPayment, date, true);
                 oderDAO.insert(oder);
            }
            
            // Thêm đơn hàng vào cơ sở dữ liệu
             
            
        } else {
            System.out.println("Danh sách sản phẩm không có giá trị.");
        }

        
      
    
   
} else {
        // Hiển thị thông báo khi chưa chọn phương thức thanh toán
        JOptionPane.showMessageDialog(this, "Vui lòng chọn phương thức thanh toán.");
    }
    List<Order> listorder = oderDAO.selectAll();
             order=listorder.getLast();
               if (order != null) {
 System.out.println("o1"+order);
        }
     return order;
       
   }

        

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCash = new javax.swing.JLabel();
        lblQr = new javax.swing.JLabel();
        lblsumMoney = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("STKaiti", 3, 24)); // NOI18N
        jLabel1.setText("Thank youuu !!");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logo-dien-tu-dep-01-removebg-preview.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        jButton1.setText("DONE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("IN");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/QR.png"))); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel6.setFont(new java.awt.Font("SimSun", 3, 24)); // NOI18N
        jLabel6.setText("PHUOC FOOD GOOD");

        lblCash.setText("THANH TOÁN BẰNG TIỀN MẶT");
        lblCash.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCashMouseClicked(evt);
            }
        });

        lblQr.setText("THANH TOÁN BẰNG QUÉT MÃ QR");
        lblQr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblQrMouseClicked(evt);
            }
        });

        lblsumMoney.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblsumMoney.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jButton1)
                        .addGap(19, 19, 19))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblQr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                    .addComponent(lblCash, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblsumMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(116, 116, 116)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(187, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblCash, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(lblQr, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(lblsumMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(501, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

       
    private void lblCashMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCashMouseClicked
        lblCash.setForeground(Color.red);
        lblQr.setForeground(Color.black);// TODO add your handling code here:
    }//GEN-LAST:event_lblCashMouseClicked

    private void lblQrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblQrMouseClicked
        lblCash.setForeground(Color.black);
        lblQr.setForeground(Color.red); // TODO add your handling code here:
    }//GEN-LAST:event_lblQrMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Order order=  insertOder(); // Thêm đơn hàng và lấy về đối tượng Order đã được tạo
System.out.println(""+order);
    if (order != null) {
        // Lấy OrderID của đơn hàng vừa được tạo ra
        int orderID = order.getOrderID();
            System.out.println("oder"+orderID);
        // Thêm chi tiết đơn hàng vào cơ sở dữ liệu
        for (Products product : productsList) {
            Orderdetail orderDetail = new Orderdetail(orderID, product.getProductID(), product.getTotalPay(), product.getPrice());
            orderDetailDAO.insert(orderDetail);
        }
        
        dispose();
    } else {
        JOptionPane.showMessageDialog(this, "Thêm đơn hàng thất bại");
        // Xử lý trường hợp thêm đơn hàng không thành công
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                List<Products> productsList = new ArrayList<>();
                List<Products> selectedProductNames = new ArrayList<>(); // Khai báo và khởi tạo danh sách sản phẩm được chọn
                HoaDon dialog = new HoaDon(new javax.swing.JFrame(), true, selectedProductNames, productsList);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblCash;
    private javax.swing.JLabel lblQr;
    private javax.swing.JLabel lblsumMoney;
    // End of variables declaration//GEN-END:variables
}
